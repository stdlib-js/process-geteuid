{
  "version": 3,
  "sources": ["../lib/polyfill.js", "../lib/native.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Polyfill for returning an effective numeric user identity for environments which do not provide native support.\n*\n* @private\n* @returns {null} null\n*\n* @example\n* var uid = geteuid();\n* // returns null\n*/\nfunction geteuid() {\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = geteuid;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// MAIN //\n\n/**\n* Returns the effective numeric user identity of the calling process.\n*\n* @private\n* @name geteuid\n* @type {Function}\n* @returns {integer} effective numeric user identity\n*\n* @example\n* var uid = geteuid();\n*/\nvar geteuid = proc.geteuid; // eslint-disable-line  node/no-unsupported-features/node-builtins\n\n\n// EXPORTS //\n\nmodule.exports = geteuid;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar polyfill = require( './polyfill.js' );\nvar builtin = require( './native.js' );\n\n\n// MAIN //\n\n/**\n* Returns the effective numeric user identity of the calling process.\n*\n* @name geteuid\n* @type {Function}\n* @returns {(integer|null)} effective numeric user identity or null\n*\n* @example\n* var uid = geteuid();\n*/\nvar geteuid = ( isFunction( builtin ) ) ? builtin : polyfill;\n\n\n// EXPORTS //\n\nmodule.exports = geteuid;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the effective numeric user identity of the calling process.\n*\n* @module @stdlib/process-geteuid\n*\n* @example\n* var geteuid = require( '@stdlib/process-geteuid' );\n*\n* var uid = geteuid();\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAgCA,SAASC,GAAU,CAClB,OAAO,IACR,CAKAD,EAAO,QAAUC,ICvCjB,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAO,QAAS,SAAU,EAgB1BC,EAAUD,EAAK,QAKnBD,EAAO,QAAUE,IC3CjB,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAa,QAAS,4BAA6B,EACnDC,EAAW,IACXC,EAAU,IAeVC,EAAYH,EAAYE,CAAQ,EAAMA,EAAUD,EAKpDF,EAAO,QAAUI,ICXjB,IAAIC,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_polyfill", "__commonJSMin", "exports", "module", "geteuid", "require_native", "__commonJSMin", "exports", "module", "proc", "geteuid", "require_main", "__commonJSMin", "exports", "module", "isFunction", "polyfill", "builtin", "geteuid", "main"]
}
